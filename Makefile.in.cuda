# Versions to build
BUILDS=gpu-shared_memory_CB cublas 2D-blocking double_buffer vectorize gpu_basic
#BUILDS=double_buffer
#BUILDS=cublas


# C and Fortran compilers
CC=CC
FC=ftn
LD=CC

NVCC=nvcc
#NVCCFLAGS=-DCUDA 
NVCCFLAGS=-DCUDA -O3 -arch=sm_80 -use_fast_math -lineinfo -Xptxas="-v"

# Python (for plotting)
PYTHON=python3

# Compiler optimization flags.  You will definitely want to play with these!
OPTFLAGS = -O3 
CFLAGS = 
FFLAGS =
LDFLAGS = -fopenmp -L/usr/local/cuda/lib64

# Add -DDEBUG_RUN to CPPFLAGS to cut down on the cases.
CPPFLAGS = "-DCOMPILER=\"$(CC)\"" "-DFLAGS=\"$(OPTFLAGS)\""

# Compile a C version (using basic_dgemm.c, in this case):
LIBS = -lm -lcudart
OBJS = matmul.o

# Libraries and include files for BLAS
LIBBLAS=`pkg-config --libs openblas`
INCBLAS=`pkg-config --cflags openblas`

LIBcuBLAS=-lcublas -lcudart